<launch>
    <!-- Load robot model-->
    <param name="robot_description" command="$(find xacro)/xacro '$(find prototipo1)/urdf/robot.urdf.xacro'" />
    <!-- Converts URDF model in TF -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <!-- Load controller settings -->
	<rosparam file="$(find prototipo1)/config/diff_drive_controller_params.yaml" command="load"/>
    <!-- Load motors settings -->
    <rosparam file="$(find prototipo1)/config/joint_limits.yaml" command="load"/>

    <!-- Hardware interface -->
    <node name="hardware_interface" pkg="prototipo1" type="robot_hw_if_node" output="screen"> 
	    <remap from="/mobile_base_controller/cmd_vel" to="/cmd_vel" />
	</node>

    <!-- Controller Manager 
    joints_update configures a JointStateController 
    mobile_base_controller configures a DiffDriveController -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"
        args="
            /joints_update
            /mobile_base_controller">
    </node>

    <!-- LiDAR setup, publishes in /scan topic -->
    <include file="$(find prototipo1)/launch/rplidar.launch"/>

    <!-- Manual robot control -->
    <!-- <node pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" name="teleop" output="screen"/> -->

    <!-- Launch RVIZ with config file for visualization -->
    <!-- <node name="rviz" pkg="rviz" type="rviz" args="-d $(find prototipo1)/rviz/model_visualization.rviz" /> -->

    <arg name="geotiff_map_file_path" default="$(find hector_geotiff)/maps"/>

    <param name="/use_sim_time" value="true"/>

    <include file="$(find hector_mapping)/launch/mapping_default.launch"/>

    <include file="$(find hector_geotiff_launch)/launch/geotiff_mapper.launch">
        <arg name="trajectory_source_frame_name" value="scanmatcher_frame"/>
        <arg name="map_file_path" value="$(arg geotiff_map_file_path)"/>
    </include>
</launch>