<launch>
    <!-- Load robot model-->
    <param name="robot_description" command="$(find xacro)/xacro '$(find prototipo1)/urdf/robot.urdf.xacro'" />
    <!-- Converts URDF model in TF -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <!-- Load controller settings -->
	<rosparam file="$(find prototipo1)/config/diff_drive_controller_params.yaml" command="load"/>
    <!-- Load motors settings -->
    <rosparam file="$(find prototipo1)/config/joint_limits.yaml" command="load"/>

    <!-- Hardware interface -->
    <node name="hardware_interface" pkg="prototipo1" type="robot_hw_if_node" output="screen"> 
	    <remap from="/mobile_base_controller/cmd_vel" to="/cmd_vel" />
	</node>

    <!-- Controller Manager 
    joints_update configures a JointStateController 
    mobile_base_controller configures a DiffDriveController -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"
        args="
            /joints_update
            /mobile_base_controller">
    </node>

    <!-- LiDAR setup, publishes in /scan topic -->
    <include file="$(find prototipo1)/launch/rplidar.launch"/>

    <!-- Laser filter settings -->
    <rosparam file="$(find prototipo1)/config/laser_filter.yaml" command="load"/>
    <!-- Laser filter -->
    <node pkg="laser_filters" type="scan_to_scan_filter_chain"
        name="laser_filter">
        <remap from="scan" to="base_scan" />
    </node>

    <!-- Manual robot control -->
    <!-- <node pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" name="teleop" output="screen"/> -->

    <!-- Launch RVIZ with config file for visualization -->
    <!-- <node name="rviz" pkg="rviz" type="rviz" args="-d $(find prototipo1)/rviz/model_visualization.rviz" /> -->

    
</launch>